[{"/Users/simongirouxportelance/NewsProject/newsproject/src/reportWebVitals.js":"1","/Users/simongirouxportelance/NewsProject/newsproject/src/MainPage.jsx":"2","/Users/simongirouxportelance/NewsProject/newsproject/src/CreationRepost.jsx":"3","/Users/simongirouxportelance/NewsProject/newsproject/src/App.js":"4","/Users/simongirouxportelance/NewsProject/newsproject/src/index.js":"5","/Users/simongirouxportelance/NewsProject/newsproject/src/Delete.jsx":"6"},{"size":362,"mtime":1610584554688,"results":"7","hashOfConfig":"8"},{"size":2309,"mtime":1611022641412,"results":"9","hashOfConfig":"8"},{"size":3201,"mtime":1610670345559,"results":"10","hashOfConfig":"8"},{"size":776,"mtime":1611019119845,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1610584554684,"results":"12","hashOfConfig":"8"},{"size":3494,"mtime":1611022672596,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"chu61b",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/simongirouxportelance/NewsProject/newsproject/src/reportWebVitals.js",[],"/Users/simongirouxportelance/NewsProject/newsproject/src/MainPage.jsx",["28","29","30","31"],"/Users/simongirouxportelance/NewsProject/newsproject/src/CreationRepost.jsx",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\n\nclass CreationRepost extends Component {\n  constructor() {\n    super();\n    this.state = {\n      link: \"\",\n      title: \"\",\n      pic: \"\",\n      col: \"Left\",\n      destroyAllNewsOn: false\n    };\n  }\n\n  send = async () => {\n\n    if (this.state.title === \"\") { return }\n    let articleToSend = {\n      title: this.state.title,\n      link: this.state.link,\n      pic: this.state.pic\n    }\n\n    let response = await fetch(\"/newsSent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(\n        { column: this.state.col, article: articleToSend }\n      ),\n    });\n    let body = await response.text();\n    body = JSON.parse(body);\n    if (body.success) {\n      this.setState({ title: \"\", link: \"\", pic: \"\" })\n      alert(\"the news is sent\")\n    }\n  }\n\n\n  destroyAllNews = async () => {\n    let response = await fetch(\"/deleteAllNews\", {\n      method: \"POST\",\n    });\n    let body = await response.text();\n    body = JSON.parse(body);\n    if (body.success) {\n      alert(\"All the news are reset\")\n    }\n  }\n\n  render = () => {\n\n    return (\n      <div>\n        <div class=\"repostHeader\">\n          Repost Creation\n      </div>\n\n        <div>\n          <div class=\"repostSection\" >\n            <div class=\"repostDescription\">Title</div><input class=\"repostInput\" value={this.state.title} onChange={(evt) => {\n              this.setState({ title: evt.target.value })\n            }} />\n          </div>\n          <div class=\"repostSection\" >\n            <div class=\"repostDescription\">Link Url</div><input class=\"repostInput\" value={this.state.link} onChange={(evt) => {\n              this.setState({ link: evt.target.value })\n            }} />\n          </div>\n          <div class=\"repostSection\" >\n            <div class=\"repostDescription\">Picture Url</div><input class=\"repostInput\" value={this.state.pic} onChange={(evt) => {\n              this.setState({ pic: evt.target.value })\n            }} />\n          </div>\n          <div class=\"repostSection\" >\n            <div class=\"repostDescription\">Which column</div>\n            <select\n              onChange={(evt) => {\n                this.setState({ col: evt.target.value })\n              }}\n              className=\"creation-event-scrollmenu\"\n            >\n              <option>Left</option>\n              <option>Center</option>\n              <option>Right</option>\n            </select>\n          </div>\n\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <button style={{ margin: \"15px\" }} onClick={() => {\n              this.send()\n            }}>Send</button>\n            <button style={{ margin: \"15px 5px 15px 15px\" }} onClick={() => {\n              if (this.state.destroyAllNewsOn) {\n                this.destroyAllNews()\n              }\n            }}>Destroy all news</button>\n            <input type=\"checkbox\" onClick={(evt) => {\n              this.setState({\n                destroyAllNewsOn: evt.target.checked\n              })\n            }}></input>\n          </div>\n\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default CreationRepost;\n","/Users/simongirouxportelance/NewsProject/newsproject/src/App.js",["33","34","35"],"/Users/simongirouxportelance/NewsProject/newsproject/src/index.js",[],["36","37"],"/Users/simongirouxportelance/NewsProject/newsproject/src/Delete.jsx",["38","39","40","41","42","43","44","45","46","47"],{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":34,"column":148,"nodeType":"54","endLine":34,"endColumn":189},{"ruleId":"52","severity":1,"message":"53","line":37,"column":148,"nodeType":"54","endLine":37,"endColumn":189},{"ruleId":"52","severity":1,"message":"53","line":41,"column":148,"nodeType":"54","endLine":41,"endColumn":189},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"55","line":4,"column":32,"nodeType":"50","messageId":"51","endLine":4,"endColumn":36},{"ruleId":"56","severity":2,"message":"57","line":21,"column":13,"nodeType":"58","endLine":21,"endColumn":19},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":67,"column":41,"nodeType":"54","endLine":67,"endColumn":139},{"ruleId":"63","severity":1,"message":"64","line":67,"column":140,"nodeType":"54","endLine":67,"endColumn":166},{"ruleId":"52","severity":1,"message":"53","line":67,"column":228,"nodeType":"54","endLine":67,"endColumn":269},{"ruleId":"52","severity":1,"message":"53","line":71,"column":41,"nodeType":"54","endLine":71,"endColumn":141},{"ruleId":"63","severity":1,"message":"64","line":71,"column":141,"nodeType":"54","endLine":71,"endColumn":167},{"ruleId":"52","severity":1,"message":"53","line":71,"column":229,"nodeType":"54","endLine":71,"endColumn":270},{"ruleId":"52","severity":1,"message":"53","line":75,"column":41,"nodeType":"54","endLine":75,"endColumn":140},{"ruleId":"63","severity":1,"message":"64","line":75,"column":140,"nodeType":"54","endLine":75,"endColumn":165},{"ruleId":"52","severity":1,"message":"53","line":75,"column":227,"nodeType":"54","endLine":75,"endColumn":268},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","react/jsx-no-undef","'Delete' is not defined.","JSXIdentifier","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]